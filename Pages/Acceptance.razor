@page "/"
@page "/{pTable}"
@page "/{pRestaurantId}/{pTable}"
@page "/Acceptance/"
@page "/Acceptance/{pRestaurantId}"
@page "/Acceptance/{pRestaurantId}/{pTable}"
@inject NavigationManager navigationManager
@inject TableTracewithQRCode.Data.HomeController  homeController

@using System.Net.Http;
@using System.Net.Http.Json;
@inject HttpClient client

<h2>Restaurant Contact Tracing</h2>
<hr />
@if (restaurant != null)
{
    <h2>Venue: @restaurant.Name </h2>
}
@if (table != null)
{
    <h2>Table: @table</h2>
}
<hr />
<button class="btn btn-primary" @onclick="Continue">Log Me</button>&nbsp;&nbsp;
<button class="btn btn-primary" @onclick="ContinueGroup">Log My Table</button>
<br />
<h1>Purpose of this Log</h1>
<p><b>By continuing you understand and accept the terms and conditions.</b></p>
<ul>
    <li>The purpose of this site is to log the MVAT usage</li>
    <li>This is only for COVID-19 tracing.</li>
    <li>If someone who logged here today is subsequently detected with COVID-19 then you will be contacted via your mobile number.</li>
    <li>You <i><b>must</b></i> submit your mobile number on the next page to gain access to the track.</li>
    <li>Your mobile number will <i><b>not</b></i> be used for any other purpose.</li>
    <li>It will be logged here with a timestamp.</li>
    <li>That log will be deleted after 28 days and will not be used for any other purpose other than COVID-19 tracking.</li>
    <li>
        <ul>
            <li>Except that in the case of an incident it will be deleted once tracing is complete.</li>
        </ul>
    </li>
</ul>

<h3>Also:</h3>
<ul>
    <li>
        If you unfortunately are tested positive for the COVID-19, please:
        <ul>
            <li>Contact the club and inform them or ...</li>
            <li>Inform the COVID-19 Contact Tracing authorities that your attendance at MVAC was logged by the club.</li>
        </ul>
    </li>
</ul>





@code{
    [Parameter]
    public string pRestaurantId { get; set; } = "1";
    [Parameter]
    public string pTable { get; set; } = "1";

    public int restaurantId { get; set; }
    public int table { get; set; }

    public Restaurant restaurant { get; set; } = null;

    protected override async Task OnInitializedAsync()
    {
        //table = table ?? "0";
        //if (table == "")
        //table = "0";
        //Table = int.Parse(table);
        await base.OnInitializedAsync();
        if (homeController.GetState())
        {
            homeController.LogOut();
        }
        restaurantId = (pRestaurantId != null) ? int.Parse(pRestaurantId) : 1;
        table = (pTable != null) ? int.Parse(pTable) : 1;
        restaurant = await client.GetFromJsonAsync<Restaurant>($"{Settings.RestaurantsPath}/{restaurantId}");
        //Settings.RestaurantsPath, restaurantId);
        this.StateHasChanged();
    }

    private void Continue()
    {
        int ticks = (int)(DateTime.Today.Ticks % 997);
        string target = $"/Log/{homeController.Pin}/{restaurantId}/{table}";
        navigationManager.NavigateTo(target);
    }
    private void ContinueGroup()
    {
        int ticks = (int)(DateTime.Today.Ticks % 997);
        string target = $"/LogGroup/{homeController.Pin}/{restaurantId}/{table}";
        navigationManager.NavigateTo(target);
    }
}

